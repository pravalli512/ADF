{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "rawadflearn"
		},
		"Newdatalinkservice_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'Newdatalinkservice'"
		},
		"Snowflakelinkedservice_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Snowflakelinkedservice'"
		},
		"sinklinkedservice_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'sinklinkedservice'"
		},
		"sourcelinkedservice_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'sourcelinkedservice'"
		},
		"AzureKeyVaultlinkedservice_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://sourcekv-adf.vault.azure.net/"
		},
		"Newdatalinkservice_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://pubgen2learning.dfs.core.windows.net/"
		},
		"sinklinkedservice_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sinkgen2learn.dfs.core.windows.net/"
		},
		"sinksnowflakelinkservice_sasUri": {
			"type": "secureString",
			"metadata": "Secure string for 'sasUri' of 'sinksnowflakelinkservice'"
		},
		"sourcelinkedservice_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sourcegen2learn.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/send email notification')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web activity fro logic app",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://snowflakeblobsink.blob.core.windows.net",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n    \"Status\": \"@{pipeline().parameters.status}\",\n    \"PipelineName\": \"@{pipeline().Pipeline}\",\n    \"ExecutionTime\": \"@{pipeline().TriggerTime}\"\n}",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"status": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-12-02T19:01:19Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVaultlinkedservice')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVaultlinkedservice_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Newdatalinkservice')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('Newdatalinkservice_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('Newdatalinkservice_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Snowflakelinkedservice')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Snowflake",
				"typeProperties": {
					"authenticationType": "Basic",
					"connectionString": "[parameters('Snowflakelinkedservice_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sinklinkedservice')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('sinklinkedservice_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('sinklinkedservice_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sinksnowflakelinkservice')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"sasUri": "[parameters('sinksnowflakelinkservice_sasUri')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sourcelinkedservice')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('sourcelinkedservice_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('sourcelinkedservice_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedTextip')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sinklinkedservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Medals.csv",
						"folderPath": "Date_Part =2023-12-02",
						"fileSystem": "olympic"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Rank",
						"type": "String"
					},
					{
						"name": "Team_Country",
						"type": "String"
					},
					{
						"name": "Gold",
						"type": "String"
					},
					{
						"name": "Silver",
						"type": "String"
					},
					{
						"name": "Bronze",
						"type": "String"
					},
					{
						"name": "Total",
						"type": "String"
					},
					{
						"name": "Rank by Total",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sinklinkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/datasetsinkderivedcol')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Newdatalinkservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "olympictransformeddata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Newdatalinkservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sinkbinarydataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sinklinkedservice",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"dire": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().dire",
							"type": "Expression"
						},
						"fileSystem": "olympic"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sinklinkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sinkds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sinklinkedservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "olympic"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sinklinkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sinksnowflakeds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sinksnowflakelinkservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "snowflake"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sinksnowflakelinkservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sourcebinarydataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sourcelinkedservice",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"dir": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().dir",
							"type": "Expression"
						},
						"fileSystem": "olympic"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sourcelinkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sourceds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sourcelinkedservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Athletes.csv",
						"fileSystem": "olympic"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "PersonName",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					},
					{
						"name": "Discipline",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sourcelinkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sourceds3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sourcelinkedservice",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"directory": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().directory",
							"type": "Expression"
						},
						"fileSystem": "olympic"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sourcelinkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/srcSnowflakeTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Snowflakelinkedservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeTable",
				"schema": [
					{
						"name": "TEAMNAME",
						"type": "VARCHAR",
						"precision": 34,
						"scale": 0
					},
					{
						"name": "DISCIPLINE",
						"type": "VARCHAR",
						"precision": 19,
						"scale": 0
					},
					{
						"name": "COUNTRY",
						"type": "VARCHAR",
						"precision": 26,
						"scale": 0
					},
					{
						"name": "EVENT",
						"type": "VARCHAR",
						"precision": 32,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "OLY",
					"table": "TEAMS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Snowflakelinkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/srcgen2csvformat')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sinklinkedservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Athletes.csv",
						"folderPath": "Date_Part =2023-12-02",
						"fileSystem": "olympic"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "PersonName",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					},
					{
						"name": "Discipline",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sinklinkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy activity from raw to source gen2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data from raw to source",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "sourcebinarydataset",
								"type": "DatasetReference",
								"parameters": {
									"dir": {
										"value": "@concat('Date_Part =',formatDateTime(utcnow(),'yyyy-MM-dd'))",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "sinkbinarydataset",
								"type": "DatasetReference",
								"parameters": {
									"dire": {
										"value": "@concat('Date_Part =',formatDateTime(utcnow(),'yyyy-MM-dd'))",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-12-02T17:17:01Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/sourcebinarydataset')]",
				"[concat(variables('factoryId'), '/datasets/sinkbinarydataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy activity from snowflake to gen2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data from snowflake to gen2",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeSource",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "srcSnowflakeTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "sinksnowflakeds",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-12-02T18:06:36Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/srcSnowflakeTable')]",
				"[concat(variables('factoryId'), '/datasets/sinksnowflakeds')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflowactivity 1 _derivedcolumn')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "srcgen2csvformat",
								"type": "DatasetReference"
							},
							"name": "sourcegen2"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "datasetsinkderivedcol",
								"type": "DatasetReference"
							},
							"name": "sink"
						}
					],
					"transformations": [
						{
							"name": "derivedColumnactivity"
						}
					],
					"scriptLines": [
						"source(output(",
						"          PersonName as string,",
						"          Country as string,",
						"          Discipline as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> sourcegen2",
						"sourcegen2 derive(PersonName = lower(PersonName)) ~> derivedColumnactivity",
						"derivedColumnactivity sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/srcgen2csvformat')]",
				"[concat(variables('factoryId'), '/datasets/datasetsinkderivedcol')]"
			]
		}
	]
}